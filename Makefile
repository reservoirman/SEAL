OBJS = ast.cmo parser.cmo scanner.cmo bytecode.cmo compile.cmo seal.cmo

TARFILES = Makefile testall.sh scanner.mll parser.mly \
	ast.ml bytecode.ml compile.ml seal.ml \

seal : $(OBJS)
	ocamlc -o seal $(OBJS)

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

seal.tar.gz : $(TARFILES)
	cd .. && tar czf seal/seal.tar.gz $(TARFILES:%=seal/%)

.PHONY : clean
clean :
	rm -f seal parser.ml parser.mli scanner.ml testall.log \
	*.cmo *.cmi *.out *.diff

# Generated by ocamldep *.ml *.mli
ast.cmo:
ast.cmx:
bytecode.cmo: ast.cmo
bytecode.cmx: ast.cmx
compile.cmo: bytecode.cmo ast.cmo
compile.cmx: bytecode.cmx ast.cmx
execute.cmo: bytecode.cmo ast.cmo
execute.cmx: bytecode.cmx ast.cmx
parser.cmo: ast.cmo parser.cmi
parser.cmx: ast.cmx parser.cmi
parser.cmi: ast.cmo


